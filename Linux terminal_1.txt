HW_1. The first part
Linux terminal (GitBash) commands
ссылка на Гитхаб https://github.com/Bsplv-1/Linux-terminal-GitBash-commands
Нужно уметь делать все пункты задания.
Куда и в каком виде отправлять задание - скажу позже.

1) Посмотреть где я
pwd

2) Создать папку
mkdir folder

3) Зайти в папку
cd folder

4) Создать 3 папки
mkdir folder1 folder2 folder3

5) Зайти в любоую папку
cd folder1

6) Создать 5 файлов (3 txt, 2 json)
touch file1.txt file2.txt file3.txt f1.json f2.json

7) Создать 3 папки
mkdir Check_1 Check_2 Check_3

8) Вывести список содержимого папки
ls – показать файлы
ls – a показывает скрытые файлы в папке
ls – l не показывает скрытые файлы 
ls – la посмотреть создалась ли папка/файл (с доп информацией, со скрытыми файлами)
ls -la folder_w/folder_1 перейти на две папки вперед и посмотреть файлы
ls -la ../../folder_2 вернуться на две папки назад и посмотреть файлы

9) Вывести список содержимого папки 
+ Открыть любой txt файл
ls -la & cat file_1.txt 

10)Вывести список содержимого папки 
+ написать туда что-нибудь, любой текст.
ls -la & cat >> 1t.txt

11) + сохранить и выйти.
:qw
Cntr+D

12) Выйти из папки на уровень выше
cd ..
—
13) переместить любые 2 файла, которые вы создали, в любую другую папку.
mv file_1.txt file_2.txt ../

14) скопировать любые 2 файла, которые вы создали, в любую другую папку.
cp 1t.txt 2t.txt folder_2
cp 1tr.txt 2tr.txt .. в предыдущую папку


15) Найти файл по имени
find – найти файл/папку в файловой систем, не зная где он находится. 
find . -name ‘f1.txt’ (поиск по названию файла, точка означает текущую директорию)
find . -name ‘*f1*’ (поиск по части названия, звездочки означают любой текст)
find . -type f -name ‘f1*’ (поиск по типу “файл”, f = file)
find . -type d -name ‘f_1*’ (поиск по типу «папка», d = directory)

16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает.
grep – Найти файлы, содержащие внутри заданный текст(строку). Например: имя пользователя, который поймал ошибку.
grep word_1 d1/f1.txt (ищет строки из 1го файла с сочетанием  букв “word_1”)
grep word_1 folder1/f1.txt folder2/f1.txt (ищет строки из 2ух файлов с сочетанием букв “word_1”)
grep -r word_1 .  (ищет строки с сочетанием букв “word_1” в текущей директории, -r найти строку в текущем каталоге и всех его подкаталогах)
grep -r -w word_1 . (ищет где находится именно эта строка)
grep -r -l word_1 . (ищет названия папок и файлов, где находится строка word_1 (если убрать L то появиться еще и содержимое где есть искомое сочетание букв)
grep -r word_1 . > log_file.txt (слить найденные логи c “word_1” в отдельный файл)
		
17) вывести несколько первых строк из текстового файла
head -5 file.txt вывести первые 5ть строк

18) вывести несколько последних строк из текстового файла
tail -5 file.txt вывести последние 5ть строк
tail -f file.txt вывод реального изменения файла
tail -f file.txt | grep 1 показывает только строчки с «1»
tail -f file.txt | grep 1 * показывает только строчки с «1» и знаками после
tail -f file.txt | grep --line-buffered 1  >>  file1.txt сохраняет строчки с 1 в новый файл
tail -f file name.txt | grep --line-buffered 1*  >>  file1.txt сохраняет строчки с 1 и знаками после в новый файл
tail -f file_name.txt | grep –line-buffered 1* >> file1.txt | tail -f file1.txt пишется в файл и в терминал

19) просмотреть содержимое длинного файла (команда less) изучите как она работает.
less file
показывает одну страницу на экране, быстрее открывает большие файлы, грузит страницу за страницей

20) вывести дату и время
date
=========

Задание  
1) Отправить http запрос на сервер.
http://162.55.220.72:5005/terminal-hw-request

ssh root@159.69.151.133 зайти на сервер (root – это имя пользователя)
Password ввести пароль

scp file_name.txt user_name@23.08.52.139:folder_1/folder_2/file_name.txt (команда + что и куда выгрузить) Выгрузка файла с компа на сервер для запуска кода, сборки мобильного приложения, разрабам нравится пользоваться терминалом, (узнать у разраба команду для запуска и user_name)

curl http://162.55.220.72:5005/terminal-hw-request 
GET-запрос на сервер 

curl --head http://162.55.220.72:5005/terminal-hw-request посмотреть заголовки ответа, --head - запрос с методом HEAD. Сервер должен вернуть заголовки без тела. 

curl -v http://162.55.220.72:5005/terminal-hw-request Если нужно увидеть не только ответ, но и запрос, то подойдет флаг --verbose. Он покажет все, включая тело ответа: (Вывод сокращен, -v, --verbose)


2) Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13
cat >> myscript.txt
#!/bin/bash  
mkdir folder_1
cd folder_1      
mkdir folder_22 folder_23 folder_24
touch 1t.txt 2t.txt 3t.txt 1j.json 2j.json
mkdir folder_33 folder_34 folder_35
ls -la
mv 1t.txt 2t.txt 3t.txt 1j.json 2j.json folder_33

Сохраняем файл, дав ему имя myscript
Cntr+D
Делаем файл исполняемым:
chmod +x ./myscript
Выполняем скрипт:
./myscript

=====================
1) Посмотреть где я - pwd
2) Создать папку - mkdir foldername
3) Зайти в папку - cd foldername


